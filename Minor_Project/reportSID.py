# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'reportSID.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3
from PyQt5.QtWidgets import QMessageBox
from fpdf import FPDF

class Ui_sidReport(object):
    def setupUi(self, sidReport):
        sidReport.setObjectName("sidReport")
        sidReport.resize(800, 599)
        self.centralwidget = QtWidgets.QWidget(sidReport)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(26)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout.addWidget(self.frame)
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_9 = QtWidgets.QLabel(self.frame_2)
        font = QtGui.QFont()
        font.setFamily("MV Boli")
        font.setPointSize(14)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout.addWidget(self.label_9)
        self.sid = QtWidgets.QLineEdit(self.frame_2)
        self.sid.setMaximumSize(QtCore.QSize(16777215, 37))
        self.sid.setObjectName("sid")
        self.horizontalLayout.addWidget(self.sid)
        self.generate = QtWidgets.QPushButton(self.frame_2)
        self.generate.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.generate.setObjectName("generate")
        self.horizontalLayout.addWidget(self.generate)
        self.verticalLayout.addWidget(self.frame_2, 0, QtCore.Qt.AlignHCenter)
        self.frame_3 = QtWidgets.QFrame(self.centralwidget)
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.name = QtWidgets.QLabel(self.frame_3)
        font = QtGui.QFont()
        font.setFamily("MV Boli")
        font.setPointSize(14)
        self.name.setFont(font)
        self.name.setObjectName("name")
        self.horizontalLayout_2.addWidget(self.name)
        self.stdName = QtWidgets.QLabel(self.frame_3)
        self.stdName.setMinimumSize(QtCore.QSize(190, 0))
        font = QtGui.QFont()
        font.setFamily("MV Boli")
        font.setPointSize(14)
        self.stdName.setFont(font)
        self.stdName.setStyleSheet("color: rgb(170, 0, 0);")
        self.stdName.setObjectName("stdName")
        self.horizontalLayout_2.addWidget(self.stdName)
        self.verticalLayout.addWidget(self.frame_3, 0, QtCore.Qt.AlignHCenter)
        self.frame_4 = QtWidgets.QFrame(self.centralwidget)
        self.frame_4.setMinimumSize(QtCore.QSize(870, 0))
        self.frame_4.setMaximumSize(QtCore.QSize(16777215, 200))
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame_4)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.table = QtWidgets.QTableWidget(self.frame_4)
        self.table.setObjectName("table")
        self.table.setColumnCount(8)
        self.table.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(7, item)
        self.verticalLayout_4.addWidget(self.table)
        self.verticalLayout.addWidget(self.frame_4, 0, QtCore.Qt.AlignHCenter)
        self.frame_5 = QtWidgets.QFrame(self.centralwidget)
        self.frame_5.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_5)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.pdf = QtWidgets.QPushButton(self.frame_5)
        self.pdf.setMinimumSize(QtCore.QSize(100, 0))
        self.pdf.setMaximumSize(QtCore.QSize(16777215, 40))
        self.pdf.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pdf.setObjectName("pdf")
        self.verticalLayout_3.addWidget(self.pdf)
        self.verticalLayout.addWidget(self.frame_5, 0, QtCore.Qt.AlignHCenter)
        sidReport.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(sidReport)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        sidReport.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(sidReport)
        self.statusbar.setObjectName("statusbar")
        sidReport.setStatusBar(self.statusbar)

        self.retranslateUi(sidReport)
        QtCore.QMetaObject.connectSlotsByName(sidReport)

        self.table.setVisible(False)
        self.pdf.setVisible(False)
        self.name.setVisible(False)
        self.stdName.setVisible(False)
        self.generate.clicked.connect(self.sidR)
        self.pdf.clicked.connect(self.repPDF)

        self.pdf.clicked.connect(sidReport.close)

    def retranslateUi(self, sidReport):
        _translate = QtCore.QCoreApplication.translate
        sidReport.setWindowTitle(_translate("sidReport", "Student Report"))
        self.label.setText(_translate("sidReport", "Student wise report"))
        self.label_9.setText(_translate("sidReport", "Enter SID"))
        self.generate.setText(_translate("sidReport", "Generate"))
        self.name.setText(_translate("sidReport", "Name:"))
        self.stdName.setText(_translate("sidReport", "k"))
        item = self.table.horizontalHeaderItem(0)
        item.setText(_translate("sidReport", "AccessionNo"))
        item = self.table.horizontalHeaderItem(1)
        item.setText(_translate("sidReport", "SubjectName"))
        item = self.table.horizontalHeaderItem(2)
        item.setText(_translate("sidReport", "BookName"))
        item = self.table.horizontalHeaderItem(3)
        item.setText(_translate("sidReport", "Author"))
        item = self.table.horizontalHeaderItem(4)
        item.setText(_translate("sidReport", "IssueDate"))
        item = self.table.horizontalHeaderItem(5)
        item.setText(_translate("sidReport", "DueDate"))
        item = self.table.horizontalHeaderItem(6)
        item.setText(_translate("sidReport", "ReturnDate"))
        item = self.table.horizontalHeaderItem(7)
        item.setText(_translate("sidReport", "FineID"))
        self.pdf.setText(_translate("sidReport", "Download PDF"))

    def sidR(self):
        sid = self.sid.text().lstrip().rstrip()
        con = sqlite3.connect("projectDB.db")
        cur = con.cursor()
        q = "select BookID, SubjectName, BookName, AuthorName, IssueDate, DueDate, ReturnDate, FineID from issueBook where sid = ?"
        cur.execute(q,(sid,))
        # q = "select distinct ib.BookID, ib.SubjectName, ib.BookName, ib.AuthorName, ib.IssueDate, ib.DueDate, ib.ReturnDate, ib.FineID, fi.FineAmount from issueBook ib, fine fi where ib.sid = ? and fi.BookID = ib.BookID and ib.FineID = ?"
        # cur.execute(q,(sid,'NULL'))
        res= cur.fetchall()

        cur1 = con.cursor()
        q1 = "select name from studentReg where sid = ?"
        cur1.execute(q1,(sid,))
        res2 = cur1.fetchall()
        # print(res)
        if sid == "":
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            msg.setText("Enter SID")
            msg.setWindowTitle("SID can't be empty")
            msg.show()
            msg.exec_()
        else:
            if res == [] or res2 == []:
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Critical)
                msg.setText("Invalid Roll")
                msg.setWindowTitle("Roll not found")
                msg.show()
                msg.exec_()    
            else:
                stname = res2[0][0]
                self.name.setVisible(True)
                self.stdName.setVisible(True)
                self.stdName.setText(stname)
                self.table.setVisible(True)
                self.pdf.setVisible(True)
                self.table.setRowCount(0)
                for i in res:
                    # print(i)
                    rc = self.table.rowCount()
                    self.table.insertRow(rc)
                    self.table.setItem(rc,0,QtWidgets.QTableWidgetItem(i[0]))
                    self.table.setItem(rc,1,QtWidgets.QTableWidgetItem(i[1]))
                    self.table.setItem(rc,2,QtWidgets.QTableWidgetItem(i[2]))
                    self.table.setItem(rc,3,QtWidgets.QTableWidgetItem(i[3]))
                    self.table.setItem(rc,4,QtWidgets.QTableWidgetItem(i[4]))
                    self.table.setItem(rc,5,QtWidgets.QTableWidgetItem(i[5]))
                    self.table.setItem(rc,6,QtWidgets.QTableWidgetItem(i[6]))
                    self.table.setItem(rc,7,QtWidgets.QTableWidgetItem(i[7]))
                    # self.table.setItem(rc,8,QtWidgets.QTableWidgetItem(str(i[8])))
    def repPDF(self):
        spacing=4    
        sid = self.sid.text().lstrip().rstrip()
        con = sqlite3.connect("projectDB.db")
        cur = con.cursor()
        q = "select BookID, SubjectName, BookName, AuthorName, IssueDate, DueDate, ReturnDate, FineID from issueBook where sid = ?"
        cur.execute(q,(sid,))
        res= cur.fetchall()
        l = []
        if res != l:
            # data = [('`PYTHON/001', 'Pyhton', 'The ABC of Python', 'Souvik Karmakar', '2023-07-11', '2023-07-15', '2023-07-27', 'F101'), ('JAVA/002', 'Java', 'The XYZ of Java', 'Souvik Karmakar', '2023-07-25', '2023-08-08', '2023-07-27', 'NULL'), ('PYTHON/003', 'Pyhton', 'The ABC of Python', 'Souvik Karmakar', '2023-07-25', '2023-08-08', '2023-07-25', 'NULL'), ('JAVA/001','Java', 'The XYZ of Java', 'Souvik Karmakar', '2023-07-20', '2023-08-26', '2023-07-27', 'NULL'), ('JAVA/002', 'Java', 'The XYZ of Java', 'Souvik Karmakar', '2023-07-20', '2023-07-26', '2023-07-27', 'F103'), ('gf', 'Java', 'The XYZ of Java', 'Souvik Karmakar', '2023-07-25', '2023-08-08', 'NULL', 'NULL'), ('ghg', 'Pyhton', 'The ABC of Python', 'Souvik Karmakar', '2023-07-25', '2023-08-08', 'NULL', 'NULL'), ('abv', 'Java', 'The XYZ of Java', 'Souvik Karmakar', '2023-07-26', '2023-08-08', 'NULL', 'NULL')]
            data = [[str(i) for i in j] for j in res]
            # data.insert(0,('A','b','c','d','e','f','g','h'))
            data.insert(0,('BookID','SubjectName','BookName','AuthorName','IssueDate','DueDate','ReturnDate', 'FineID'))
            pdf = FPDF('L','mm','A4')
            pdf.set_font('helvetica','B',9)
            pdf.add_page()

            col_width = pdf.w / 8.5
            row_height = pdf.font_size
            for row in data:
                for item in row:
                    pdf.cell(col_width, row_height*spacing, txt=item, border=2)
                pdf.ln(row_height*spacing)
                
            pdf.output('`simple_table_3.pdf')
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Information)
            msg.setText("PDF has download!")
            msg.setWindowTitle("PDF")
            msg.show()
            msg.exec_() 

        else:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            msg.setText("Table is empty")
            msg.setWindowTitle("PDF")
            msg.show()
            msg.exec_()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    sidReport = QtWidgets.QMainWindow()
    ui = Ui_sidReport()
    ui.setupUi(sidReport)
    sidReport.show()
    sys.exit(app.exec_())
