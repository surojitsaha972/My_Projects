# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'reportFine.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3
from PyQt5.QtWidgets import QMessageBox
from fpdf import FPDF

class Ui_fine(object):
    def setupUi(self, fine):
        fine.setObjectName("fine")
        fine.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(fine)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(26)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout.addWidget(self.frame)
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setMinimumSize(QtCore.QSize(16, 0))
        self.frame_2.setMaximumSize(QtCore.QSize(1200, 250))
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_2)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.table = QtWidgets.QTableWidget(self.frame_2)
        self.table.setMinimumSize(QtCore.QSize(615, 0))
        self.table.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.table.setObjectName("table")
        self.table.setColumnCount(6)
        self.table.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(5, item)
        self.verticalLayout_3.addWidget(self.table)
        self.verticalLayout.addWidget(self.frame_2, 0, QtCore.Qt.AlignHCenter)
        self.frame_3 = QtWidgets.QFrame(self.centralwidget)
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame_3)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.pdf = QtWidgets.QPushButton(self.frame_3)
        self.pdf.setMinimumSize(QtCore.QSize(94, 0))
        self.pdf.setMaximumSize(QtCore.QSize(129, 42))
        self.pdf.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pdf.setObjectName("pdf")
        self.verticalLayout_4.addWidget(self.pdf)
        self.verticalLayout.addWidget(self.frame_3, 0, QtCore.Qt.AlignHCenter)
        fine.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(fine)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        fine.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(fine)
        self.statusbar.setObjectName("statusbar")
        fine.setStatusBar(self.statusbar)

        self.retranslateUi(fine)
        QtCore.QMetaObject.connectSlotsByName(fine)

        self.fine()
        self.pdf.clicked.connect(self.repPDF)
        self.pdf.clicked.connect(fine.close)

    def retranslateUi(self, fine):
        _translate = QtCore.QCoreApplication.translate
        fine.setWindowTitle(_translate("fine", "MainWindow"))
        self.label.setText(_translate("fine", "Fine Report"))
        item = self.table.horizontalHeaderItem(0)
        item.setText(_translate("fine", "Std Roll"))
        item = self.table.horizontalHeaderItem(1)
        item.setText(_translate("fine", "AccessionNo"))
        item = self.table.horizontalHeaderItem(2)
        item.setText(_translate("fine", "IssueDate"))
        item = self.table.horizontalHeaderItem(3)
        item.setText(_translate("fine", "ReturnDate"))
        item = self.table.horizontalHeaderItem(4)
        item.setText(_translate("fine", "FineID"))
        item = self.table.horizontalHeaderItem(5)
        item.setText(_translate("fine", "Fine Amount"))
        self.pdf.setText(_translate("fine", "Generate PDF"))

    def fine(self):
        con = sqlite3.connect("projectDB.db")
        cur = con.cursor()
        q = "select ib.SID,ib.BookID,IssueDate,ReturnDate,ib.FineID,FineAmount from issueBook ib, fine fi where ib.FineID != ? and ib.FineID=fi.FineID"
        cur.execute(q,("NULL",))
        res= cur.fetchall()
        if res == []:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            msg.setText("No fine has taken till now")
            msg.setWindowTitle("Empty")
            msg.show()
            msg.exec_()    
        # for i in res:
        #     print(i)
        else:
            self.table.setRowCount(0)
            for i in res:
                # print(i)
                rc = self.table.rowCount()
                self.table.insertRow(rc)
                self.table.setItem(rc,0,QtWidgets.QTableWidgetItem(str(i[0])))
                self.table.setItem(rc,1,QtWidgets.QTableWidgetItem(i[1]))
                self.table.setItem(rc,2,QtWidgets.QTableWidgetItem(i[2]))
                self.table.setItem(rc,3,QtWidgets.QTableWidgetItem(i[3]))
                self.table.setItem(rc,4,QtWidgets.QTableWidgetItem(str(i[4])))
                self.table.setItem(rc,5,QtWidgets.QTableWidgetItem(str(i[5])))

    def repPDF(self):
        spacing=4    
        con = sqlite3.connect("projectDB.db")
        cur = con.cursor()
        q = "select ib.SID,ib.BookID,IssueDate,ReturnDate,ib.FineID,FineAmount from issueBook ib, fine fi where ib.FineID != ? and ib.FineID=fi.FineID"
        cur.execute(q,("NULL",))
        res= cur.fetchall()
        # data = [('PYTHON/001', 'Pyhton', 'The ABC of Python', 'Souvik Karmakar', '2023-07-11', '2023-07-15', '2023-07-27', 'F101'), ('JAVA/002', 'Java', 'The XYZ of Java', 'Souvik Karmakar', '2023-07-25', '2023-08-08', '2023-07-27', 'NULL'), ('PYTHON/003', 'Pyhton', 'The ABC of Python', 'Souvik Karmakar', '2023-07-25', '2023-08-08', '2023-07-25', 'NULL'), ('JAVA/001','Java', 'The XYZ of Java', 'Souvik Karmakar', '2023-07-20', '2023-08-26', '2023-07-27', 'NULL'), ('JAVA/002', 'Java', 'The XYZ of Java', 'Souvik Karmakar', '2023-07-20', '2023-07-26', '2023-07-27', 'F103'), ('gf', 'Java', 'The XYZ of Java', 'Souvik Karmakar', '2023-07-25', '2023-08-08', 'NULL', 'NULL'), ('ghg', 'Pyhton', 'The ABC of Python', 'Souvik Karmakar', '2023-07-25', '2023-08-08', 'NULL', 'NULL'), ('abv', 'Java', 'The XYZ of Java', 'Souvik Karmakar', '2023-07-26', '2023-08-08', 'NULL', 'NULL')]
        data = [[str(i) for i in j] for j in res]
        # data.insert(0,('A','b','c','d','e','f','g','h'))
        data.insert(0,('Std Roll','BookID','Issue Date','Return Date','Fine Date','Fine Amount'))
        pdf = FPDF('L','mm','A4')
        pdf.set_font('helvetica','B',9)
        pdf.add_page()

        col_width = pdf.w / 8.5
        row_height = pdf.font_size
        for row in data:
            for item in row:
                pdf.cell(col_width, row_height*spacing, txt=item, border=2)
            pdf.ln(row_height*spacing)
            
        pdf.output('simple_table_3.pdf')

        msg = QMessageBox()
        msg.setIcon(QMessageBox.Information)
        msg.setText("PDF has download!")
        msg.setWindowTitle("PDF")
        msg.show()
        msg.exec_() 

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    fine = QtWidgets.QMainWindow()
    ui = Ui_fine()
    ui.setupUi(fine)
    fine.show()
    sys.exit(app.exec_())
