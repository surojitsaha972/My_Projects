from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3
from PyQt5.QtWidgets import QMessageBox
from fpdf import FPDF

class Ui_repapp(object):
    def setupUi(self, repapp):
        repapp.setObjectName("repapp")
        repapp.resize(1368, 878)
        repapp.setMinimumSize(QtCore.QSize(1368, 878))
        repapp.setMaximumSize(QtCore.QSize(1368, 878))
        self.centralwidget = QtWidgets.QWidget(repapp)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setFamily("MS Serif")
        font.setPointSize(26)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout.addWidget(self.frame)
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setMinimumSize(QtCore.QSize(860, 0))
        self.frame_2.setMaximumSize(QtCore.QSize(16777215, 200))
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame_2)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.table = QtWidgets.QTableWidget(self.frame_2)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.table.setFont(font)
        self.table.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.ForbiddenCursor))
        self.table.setObjectName("table")
        self.table.setColumnCount(12)
        self.table.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        item.setFont(font)
        self.table.setHorizontalHeaderItem(8, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(9, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(10, item)
        item = QtWidgets.QTableWidgetItem()
        self.table.setHorizontalHeaderItem(11, item)
        self.verticalLayout_4.addWidget(self.table)
        self.verticalLayout.addWidget(self.frame_2, 0, QtCore.Qt.AlignHCenter)
        self.frame_3 = QtWidgets.QFrame(self.centralwidget)
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frame_3)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.pdfBtn = QtWidgets.QPushButton(self.frame_3)
        self.pdfBtn.setMinimumSize(QtCore.QSize(97, 39))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pdfBtn.setFont(font)
        self.pdfBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.pdfBtn.setStyleSheet("background-color: rgb(172, 172, 172);")
        self.pdfBtn.setObjectName("pdfBtn")
        self.verticalLayout_3.addWidget(self.pdfBtn)
        self.verticalLayout.addWidget(self.frame_3, 0, QtCore.Qt.AlignHCenter)
        repapp.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(repapp)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1368, 27))
        self.menubar.setObjectName("menubar")
        repapp.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(repapp)
        self.statusbar.setObjectName("statusbar")
        repapp.setStatusBar(self.statusbar)

        self.showtable()
        self.pdfBtn.clicked.connect(self.repPDF)

        self.retranslateUi(repapp)
        QtCore.QMetaObject.connectSlotsByName(repapp)

    def retranslateUi(self, repapp):
        _translate = QtCore.QCoreApplication.translate
        repapp.setWindowTitle(_translate("repapp", "Approve Report"))
        self.label.setText(_translate("repapp", "Approve Report"))
        item = self.table.horizontalHeaderItem(0)
        item.setText(_translate("repapp", "LID"))
        item = self.table.horizontalHeaderItem(1)
        item.setText(_translate("repapp", "Name"))
        item = self.table.horizontalHeaderItem(2)
        item.setText(_translate("repapp", "Email"))
        item = self.table.horizontalHeaderItem(3)
        item.setText(_translate("repapp", "Phone No"))
        item = self.table.horizontalHeaderItem(4)
        item.setText(_translate("repapp", "Address"))
        item = self.table.horizontalHeaderItem(5)
        item.setText(_translate("repapp", "Aadhar No"))
        item = self.table.horizontalHeaderItem(6)
        item.setText(_translate("repapp", "Pan No"))
        item = self.table.horizontalHeaderItem(7)
        item.setText(_translate("repapp", "Bank Name"))
        item = self.table.horizontalHeaderItem(8)
        item.setText(_translate("repapp", "A/C No"))
        item = self.table.horizontalHeaderItem(9)
        item.setText(_translate("repapp", "IFSC code"))
        item = self.table.horizontalHeaderItem(10)
        item.setText(_translate("repapp", "Amount"))
        item = self.table.horizontalHeaderItem(11)
        item.setText(_translate("repapp", "Approve Date"))
        self.pdfBtn.setText(_translate("repapp", "Generate PDF"))


    def showtable(self):
        con = sqlite3.connect("UMRS.db")
        cur = con.cursor()
        q = "select * from approveRequest"
        cur.execute(q)
        res= cur.fetchall()
        if res == []:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            msg.setText("")
            msg.setWindowTitle("Invalid")
            msg.show()
            msg.exec_()    
        else:
            self.table.setRowCount(0)
            for i in res:
                # print(i)
                rc = self.table.rowCount()
                self.table.insertRow(rc)
                self.table.setItem(rc,0,QtWidgets.QTableWidgetItem(str(i[0])))
                self.table.setItem(rc,1,QtWidgets.QTableWidgetItem(i[1]))
                self.table.setItem(rc,2,QtWidgets.QTableWidgetItem(i[2]))
                self.table.setItem(rc,3,QtWidgets.QTableWidgetItem(str(i[3])))
                self.table.setItem(rc,4,QtWidgets.QTableWidgetItem(str(i[4])))
                self.table.setItem(rc,5,QtWidgets.QTableWidgetItem(str(i[5])))
                self.table.setItem(rc,6,QtWidgets.QTableWidgetItem(i[6]))
                self.table.setItem(rc,7,QtWidgets.QTableWidgetItem(str(i[7])))
                self.table.setItem(rc,8,QtWidgets.QTableWidgetItem(i[8]))
                self.table.setItem(rc,9,QtWidgets.QTableWidgetItem(str(i[9])))
                self.table.setItem(rc,10,QtWidgets.QTableWidgetItem(str(i[10])))
                self.table.setItem(rc,11,QtWidgets.QTableWidgetItem(str(i[11])))
                # self.table.setItem(rc,9,QtWidgets.QTableWidgetItem(str(i[])))
                
    def repPDF(self):
        spacing=4    
        con = sqlite3.connect("UMRS.db")
        cur = con.cursor()
        q = "select * from approveRequest"
        cur.execute(q)
        res= cur.fetchall()
        # data = [('PYTHON/001', 'Pyhton', 'The ABC of Python', 'Souvik Karmakar', '2023-07-11', '2023-07-15', '2023-07-27', 'F101'), ('JAVA/002', 'Java', 'The XYZ of Java', 'Souvik Karmakar', '2023-07-25', '2023-08-08', '2023-07-27', 'NULL'), ('PYTHON/003', 'Pyhton', 'The ABC of Python', 'Souvik Karmakar', '2023-07-25', '2023-08-08', '2023-07-25', 'NULL'), ('JAVA/001','Java', 'The XYZ of Java', 'Souvik Karmakar', '2023-07-20', '2023-08-26', '2023-07-27', 'NULL'), ('JAVA/002', 'Java', 'The XYZ of Java', 'Souvik Karmakar', '2023-07-20', '2023-07-26', '2023-07-27', 'F103'), ('gf', 'Java', 'The XYZ of Java', 'Souvik Karmakar', '2023-07-25', '2023-08-08', 'NULL', 'NULL'), ('ghg', 'Pyhton', 'The ABC of Python', 'Souvik Karmakar', '2023-07-25', '2023-08-08', 'NULL', 'NULL'), ('abv', 'Java', 'The XYZ of Java', 'Souvik Karmakar', '2023-07-26', '2023-08-08', 'NULL', 'NULL')]
        data = [[str(i) for i in j] for j in res]
        # data.insert(0,('A','b','c','d','e','f','g','h'))
        data.insert(0,('LID','Name','Email','PhoneNo','Address','AadharNo','PanNo','BankName','account','ifsc','amount','approveRequest'))
        pdf = FPDF('L','mm','A4')
        pdf.set_font('helvetica','B',9)
        pdf.add_page()

        col_width = pdf.w / 12.7
        row_height = pdf.font_size
        for row in data:
            for item in row:
                pdf.cell(col_width, row_height*spacing, txt=item, border=3)
            pdf.ln(row_height*spacing)
            
        pdf.output('approve report.pdf')



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    repapp = QtWidgets.QMainWindow()
    ui = Ui_repapp()
    ui.setupUi(repapp)
    repapp.show()
    sys.exit(app.exec_())
